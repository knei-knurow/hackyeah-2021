{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2017
  },
  "env": {
    "es6": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "airbnb-base",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript"
  ],
  "plugins": ["@typescript-eslint", "prettier", "promise", "import"],
  "rules": {
    "prettier/prettier": ["warn"],
    "no-console": "off",
    "no-empty": "warn",
    "no-underscore-dangle": "off",
    "no-empty-function": "off",
    "no-useless-constructor": "off",
    "no-use-before-define": "off",
    "no-restricted-syntax": "off",
    "prefer-template": "warn",
    "prefer-destructuring": "off",
    "operator-assignment": "off",
    "consistent-return": "off",
    "max-classes-per-file": "off",
    "no-loop-func": "off",
    "import/order": "off",
    "import/newline-after-import": "off",
    "import/first": "off",
    "import/prefer-default-export": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-parameter-properties": ["off"],
    "@typescript-eslint/explicit-member-accessibility": ["off"],
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-var-requires": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ]
  },
  "overrides": [
    {
      // enable the rule specifically for TypeScript files
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": ["error"]
      }
    }
  ],
  // Needed for eslint-plugin-import to correctly detect .ts files
  "settings": {
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  }
}
